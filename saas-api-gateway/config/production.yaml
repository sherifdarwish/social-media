# Production Configuration for Social Media Agent SaaS Platform
# This file contains production-ready settings for deployment

# Application Settings
app:
  name: "Social Media Agent SaaS"
  version: "2.0.0"
  environment: "production"
  debug: false
  host: "0.0.0.0"
  port: 5000
  secret_key: "${SECRET_KEY}"  # Set via environment variable
  
# Database Configuration
database:
  url: "${DATABASE_URL}"  # PostgreSQL connection string
  pool_size: 20
  max_overflow: 30
  pool_timeout: 30
  pool_recycle: 3600
  echo: false
  
# Redis Configuration (for caching and sessions)
redis:
  url: "${REDIS_URL}"
  decode_responses: true
  socket_timeout: 5
  socket_connect_timeout: 5
  retry_on_timeout: true
  
# JWT Configuration
jwt:
  secret_key: "${JWT_SECRET_KEY}"
  access_token_expires: 3600  # 1 hour
  refresh_token_expires: 2592000  # 30 days
  algorithm: "HS256"
  
# Stripe Configuration
stripe:
  publishable_key: "${STRIPE_PUBLISHABLE_KEY}"
  secret_key: "${STRIPE_SECRET_KEY}"
  webhook_secret: "${STRIPE_WEBHOOK_SECRET}"
  
  # Subscription Plans
  plans:
    free:
      price_id: "${STRIPE_FREE_PLAN_PRICE_ID}"
      name: "Free Plan"
      posts_per_week: 5
      features:
        - "5 posts per week"
        - "Basic analytics"
        - "Email support"
    pro:
      price_id: "${STRIPE_PRO_PLAN_PRICE_ID}"
      name: "Pro Plan"
      price: 20.00
      posts_per_week: 20
      features:
        - "20 posts per week"
        - "Advanced analytics"
        - "Priority support"
        - "Custom branding"
        - "API access"

# Social Media OAuth Configuration
oauth:
  facebook:
    client_id: "${FACEBOOK_CLIENT_ID}"
    client_secret: "${FACEBOOK_CLIENT_SECRET}"
    redirect_uri: "${FACEBOOK_REDIRECT_URI}"
    
  twitter:
    client_id: "${TWITTER_CLIENT_ID}"
    client_secret: "${TWITTER_CLIENT_SECRET}"
    redirect_uri: "${TWITTER_REDIRECT_URI}"
    
  linkedin:
    client_id: "${LINKEDIN_CLIENT_ID}"
    client_secret: "${LINKEDIN_CLIENT_SECRET}"
    redirect_uri: "${LINKEDIN_REDIRECT_URI}"
    
  instagram:
    client_id: "${INSTAGRAM_CLIENT_ID}"
    client_secret: "${INSTAGRAM_CLIENT_SECRET}"
    redirect_uri: "${INSTAGRAM_REDIRECT_URI}"
    
  tiktok:
    client_id: "${TIKTOK_CLIENT_ID}"
    client_secret: "${TIKTOK_CLIENT_SECRET}"
    redirect_uri: "${TIKTOK_REDIRECT_URI}"

# Email Configuration
email:
  smtp_server: "${SMTP_SERVER}"
  smtp_port: "${SMTP_PORT}"
  smtp_username: "${SMTP_USERNAME}"
  smtp_password: "${SMTP_PASSWORD}"
  from_email: "${FROM_EMAIL}"
  use_tls: true
  
# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "/var/log/social-media-agent/app.log"
  max_bytes: 10485760  # 10MB
  backup_count: 5
  
# Security Configuration
security:
  cors_origins: 
    - "${FRONTEND_URL}"
    - "https://yourdomain.com"
  rate_limiting:
    enabled: true
    default_limits: "100 per hour"
    storage_uri: "${REDIS_URL}"
  
  # Token encryption key for social media tokens
  token_encryption_key: "${SOCIAL_TOKEN_ENCRYPTION_KEY}"
  
  # Content Security Policy
  csp:
    default_src: "'self'"
    script_src: "'self' 'unsafe-inline' https://js.stripe.com"
    style_src: "'self' 'unsafe-inline'"
    img_src: "'self' data: https:"
    connect_src: "'self' https://api.stripe.com"

# Content Generation Configuration
content_generation:
  openai:
    api_key: "${OPENAI_API_KEY}"
    model: "gpt-4"
    max_tokens: 2000
    temperature: 0.7
    
  anthropic:
    api_key: "${ANTHROPIC_API_KEY}"
    model: "claude-3-sonnet-20240229"
    max_tokens: 2000
    
  google:
    api_key: "${GOOGLE_AI_API_KEY}"
    model: "gemini-pro"

# Analytics Configuration
analytics:
  retention_days: 365  # Keep analytics data for 1 year
  batch_size: 1000
  sync_interval: 3600  # 1 hour
  
# Monitoring Configuration
monitoring:
  sentry:
    dsn: "${SENTRY_DSN}"
    environment: "production"
    
  health_check:
    enabled: true
    endpoint: "/health"
    
  metrics:
    enabled: true
    endpoint: "/metrics"

# File Storage Configuration
storage:
  type: "s3"  # or "local" for development
  s3:
    bucket: "${S3_BUCKET_NAME}"
    region: "${AWS_REGION}"
    access_key: "${AWS_ACCESS_KEY_ID}"
    secret_key: "${AWS_SECRET_ACCESS_KEY}"
  local:
    upload_folder: "/var/uploads"
    max_file_size: 16777216  # 16MB

# Cache Configuration
cache:
  type: "redis"
  default_timeout: 300  # 5 minutes
  key_prefix: "sma_cache:"
  
# Background Jobs Configuration
celery:
  broker_url: "${CELERY_BROKER_URL}"
  result_backend: "${CELERY_RESULT_BACKEND}"
  task_serializer: "json"
  accept_content: ["json"]
  result_serializer: "json"
  timezone: "UTC"
  
  # Task routing
  task_routes:
    "content_generation.*": {"queue": "content"}
    "social_posting.*": {"queue": "posting"}
    "analytics.*": {"queue": "analytics"}
    "notifications.*": {"queue": "notifications"}

# API Configuration
api:
  version: "v1"
  title: "Social Media Agent API"
  description: "Comprehensive API for social media content management and automation"
  
  # Rate limiting per endpoint
  rate_limits:
    auth: "10 per minute"
    content_generation: "50 per hour"
    social_posting: "100 per hour"
    analytics: "200 per hour"
    
  # API Documentation
  docs:
    enabled: true
    url: "/docs"
    redoc_url: "/redoc"

# Feature Flags
features:
  advanced_analytics: true
  ai_recommendations: true
  multi_tenant: true
  oauth_integration: true
  webhook_support: true
  export_functionality: true
  
# Deployment Configuration
deployment:
  workers: 4
  worker_class: "gevent"
  worker_connections: 1000
  max_requests: 1000
  max_requests_jitter: 100
  timeout: 30
  keepalive: 2
  
# Backup Configuration
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention_days: 30
  s3_bucket: "${BACKUP_S3_BUCKET}"

